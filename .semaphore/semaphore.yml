---
version: "v1.0"
name: "Icepeak CI Pipeline"

agent:
  machine:
    type: "f1-standard-2"
    os_image: "ubuntu2004"

blocks:
  - name: "Build and test"
    dependencies: []

    task:
      prologue:
        commands:
          - "checkout"

          # Download and verify Nix installation script.
          - curl -o install-nix-2.10.3 https://releases.nixos.org/nix/nix-2.10.3/install
          - sha256sum --check .semaphore/install-nix-2.10.3.sha256

          # This prologue contains commands aimed at preparing the Nix environment.
          - .semaphore/prologue.sh
          # Restore `/nix` cache. Create the directory first, otherwise we encounter
          # permission errors. We do this because the Semaphore cache is faster than
          # both Cachix and cache.nixos.org.
          - "cache restore nix-store-"

          # For some reason, Semaphore CI sets this variable, but it causes the nix installation to fail
          - unset LD_LIBRARY_PATH

          # Install Nix and source the shell configuration immediately.
          - "sh ./install-nix-2.10.3 --no-daemon"
          # Enable `nix-command` feature, which `nix build` needs to build
          - "sudo mkdir /etc/nix"
          - "echo 'experimental-features = nix-command flakes' | sudo tee -a /etc/nix/nix.conf"

          - ". $HOME/.nix-profile/etc/profile.d/nix.sh"

          # Build as many derivations simultaneously as there are cores.
          - mkdir -p ~/.config/nix
          - echo "max-jobs = auto" >> ~/.config/nix/nix.conf

      jobs:
        - name: "Check frozen versions"
          commands:
            - "nix develop -f default.nix -c cabal --config-file=/dev/null build --dry-run all"

        - name: "Build client"
          commands:
            - "nix-build --no-out-link ./release.nix --attr icepeak-client"

        - name: "Build server"
          commands:
            - "nix-build --no-out-link ./release.nix --attr icepeak"

      epilogue:
        always:
          commands:
            # Store a copy of the nix store. This will be refreshed daily, which
            # is more than sufficient for this repo.
            - "cache store nix-store-$(date -u -Idate) /nix"
